# Generated by Django 5.2.4 on 2025-08-07 14:30

import datetime
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('Models', '0004_alter_product_name'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Person',
            fields=[
                ('image', models.ImageField(blank=True, null=True, upload_to='')),
                ('person_id', models.CharField(max_length=20, primary_key=True, serialize=False)),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('father_name', models.CharField(max_length=100)),
                ('gender', models.CharField(choices=[('Male', 'Male'), ('Female', 'Female'), ('Others', 'Others')], max_length=6)),
                ('dob', models.DateField(db_column='DOB')),
                ('cnic', models.CharField(db_column='CNIC', max_length=15, unique=True)),
                ('contact_number', models.CharField(max_length=15, unique=True)),
                ('religion', models.CharField(blank=True, max_length=100, null=True)),
                ('institutional_email', models.EmailField(max_length=254, unique=True)),
                ('personal_email', models.EmailField(blank=True, max_length=254, null=True)),
                ('type', models.CharField(choices=[('Admin', 'Admin'), ('Faculty', 'Faculty'), ('Student', 'Student')], db_column='type', max_length=7)),
                ('user', models.OneToOneField(blank=True, db_column='userID', null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'person',
            },
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('department_id', models.AutoField(primary_key=True, serialize=False)),
                ('department_name', models.CharField(max_length=100)),
                ('department_inauguration_date', models.DateField(blank=True, db_column='establishmentDate', null=True)),
            ],
            options={
                'db_table': 'department',
            },
        ),
        migrations.CreateModel(
            name='Semester',
            fields=[
                ('semester_id', models.AutoField(primary_key=True, serialize=False)),
                ('semester_no', models.IntegerField()),
                ('status', models.CharField(choices=[('Active', 'Active'), ('Inactive', 'Inactive'), ('Completed', 'Completed')], default='Inactive', max_length=15)),
                ('session', models.CharField(blank=True, max_length=15, null=True)),
            ],
            options={
                'db_table': 'semester',
            },
        ),
        migrations.CreateModel(
            name='Address',
            fields=[
                ('person_id', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='Models.person')),
                ('country', models.CharField(max_length=50)),
                ('province', models.CharField(blank=True, max_length=50, null=True)),
                ('city', models.CharField(max_length=50)),
                ('zipcode', models.IntegerField(blank=True, null=True)),
                ('street_address', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'db_table': 'address',
            },
        ),
        migrations.CreateModel(
            name='Admin',
            fields=[
                ('employee_id', models.OneToOneField(on_delete=django.db.models.deletion.RESTRICT, primary_key=True, serialize=False, to='Models.person')),
                ('joining_date', models.DateField(blank=True, default=datetime.datetime(2025, 8, 7, 14, 30, 39, 284091, tzinfo=datetime.timezone.utc))),
                ('leaving_date', models.DateField(blank=True, null=True)),
                ('officeLocation', models.CharField(blank=True, max_length=100, null=True)),
                ('marital_status', models.CharField(blank=True, choices=[('Single', 'Single'), ('Married', 'Married'), ('Divorced', 'Divorced'), ('Widowed', 'Widowed')], max_length=10, null=True)),
                ('status', models.CharField(choices=[('Active', 'Active'), ('Suspended', 'Suspended'), ('Acting', 'Acting')], default='Active', max_length=10)),
            ],
            options={
                'db_table': 'Admin',
            },
        ),
        migrations.CreateModel(
            name='Faculty',
            fields=[
                ('employee_id', models.OneToOneField(on_delete=django.db.models.deletion.RESTRICT, primary_key=True, serialize=False, to='Models.person')),
                ('designation', models.CharField(choices=[('Lab Engineer', 'Lab Engineer'), ('Lecturer', 'Lecturer'), ('Senior Lecturer', 'Senior Lecturer'), ('Associate Professor', 'Associate Professor'), ('Assistant Professor', 'Assistant Professor'), ('Professor', 'Professor')], max_length=20)),
                ('joining_date', models.DateField(blank=True, default=datetime.datetime(2025, 8, 7, 14, 30, 39, 284091, tzinfo=datetime.timezone.utc))),
                ('department_id', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='Models.department')),
            ],
            options={
                'db_table': 'Faculty',
            },
        ),
        migrations.CreateModel(
            name='AuditTrail',
            fields=[
                ('audit_id', models.AutoField(primary_key=True, serialize=False)),
                ('action_type', models.CharField(max_length=6)),
                ('entity_name', models.CharField(max_length=50)),
                ('time_stamp', models.DateTimeField(default=datetime.datetime.now)),
                ('ip_address', models.CharField(max_length=45)),
                ('user_agent', models.CharField(max_length=255)),
                ('old_value', models.CharField(blank=True, max_length=255, null=True)),
                ('new_value', models.CharField(blank=True, max_length=255, null=True)),
                ('userid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Models.person')),
            ],
            options={
                'db_table': 'auditTrail',
            },
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('course_code', models.CharField(max_length=20, primary_key=True, serialize=False)),
                ('course_name', models.CharField(max_length=100)),
                ('credit_hours', models.IntegerField()),
                ('lab', models.BooleanField(default=False)),
                ('description', models.TextField(blank=True, null=True)),
                ('pre_requisite', models.ForeignKey(blank=True, db_column='preRequisite', null=True, on_delete=django.db.models.deletion.SET_NULL, to='Models.course')),
            ],
            options={
                'db_table': 'course',
            },
        ),
        migrations.CreateModel(
            name='CourseAllocation',
            fields=[
                ('allocation_id', models.AutoField(primary_key=True, serialize=False)),
                ('session', models.CharField(blank=True, max_length=20, null=True)),
                ('status', models.CharField(choices=[('Ongoing', 'Ongoing'), ('Completed', 'Completed'), ('Cancelled', 'Cancelled')], db_column='status', default='Ongoing', max_length=9)),
                ('course_code', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='Models.course')),
                ('semester_id', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='Models.semester')),
                ('teacher_id', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='Models.faculty')),
            ],
            options={
                'db_table': 'courseAllocation',
            },
        ),
        migrations.CreateModel(
            name='Assessment',
            fields=[
                ('assessment_id', models.AutoField(primary_key=True, serialize=False)),
                ('assessment_type', models.CharField(choices=[('Quiz', 'Quiz'), ('Assignment', 'Assignment'), ('Project', 'Project'), ('Presentation', 'Presentation'), ('Mid Exam', 'Mid Exam'), ('Final Exam', 'Final Exam')], max_length=15)),
                ('assessment_name', models.CharField(max_length=20)),
                ('weightage', models.IntegerField()),
                ('assessment_date', models.DateField(blank=True, null=True)),
                ('total_marks', models.IntegerField()),
                ('allocation_id', models.ForeignKey(db_column='allocationID', on_delete=django.db.models.deletion.CASCADE, to='Models.courseallocation')),
            ],
            options={
                'db_table': 'assessment',
            },
        ),
        migrations.CreateModel(
            name='Enrollment',
            fields=[
                ('enrollment_id', models.AutoField(primary_key=True, serialize=False)),
                ('enrollment_date', models.DateTimeField(default=datetime.datetime(2025, 8, 7, 14, 30, 39, 284091, tzinfo=datetime.timezone.utc))),
                ('status', models.CharField(choices=[('Active', 'Active'), ('Completed', 'Completed'), ('Dropped', 'Dropped')], default='Active', max_length=9)),
                ('allocation_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Models.courseallocation')),
            ],
            options={
                'db_table': 'enrollment',
            },
        ),
        migrations.CreateModel(
            name='Lecture',
            fields=[
                ('lecture_id', models.CharField(max_length=10, primary_key=True, serialize=False)),
                ('lecture_no', models.IntegerField()),
                ('venue', models.CharField(blank=True, max_length=50, null=True)),
                ('starting_time', models.DateTimeField(db_column='startingTime')),
                ('duration', models.IntegerField(blank=True, null=True)),
                ('topic', models.TextField(blank=True, null=True)),
                ('allocation_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Models.courseallocation')),
            ],
            options={
                'db_table': 'lecture',
            },
        ),
        migrations.CreateModel(
            name='Program',
            fields=[
                ('program_id', models.CharField(max_length=10, primary_key=True, serialize=False)),
                ('program_name', models.CharField(max_length=100)),
                ('total_semesters', models.IntegerField(blank=True, default=8)),
                ('fee_per_semester', models.IntegerField(blank=True, null=True)),
                ('department_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='Models.department')),
            ],
            options={
                'db_table': 'program',
            },
        ),
        migrations.CreateModel(
            name='Class',
            fields=[
                ('class_id', models.AutoField(primary_key=True, serialize=False)),
                ('batch_year', models.IntegerField(blank=True, null=True)),
                ('program_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='Models.program')),
            ],
            options={
                'db_table': 'class',
                'ordering': ['batch_year'],
            },
        ),
        migrations.CreateModel(
            name='Qualification',
            fields=[
                ('qualification_id', models.AutoField(primary_key=True, serialize=False)),
                ('degree_title', models.CharField(max_length=50)),
                ('education_board', models.CharField(blank=True, max_length=20, null=True)),
                ('institution', models.CharField(max_length=50)),
                ('passing_year', models.TextField(blank=True, null=True)),
                ('total_marks', models.IntegerField(blank=True, null=True)),
                ('obtained_marks', models.IntegerField(blank=True, null=True)),
                ('is_current', models.IntegerField(blank=True, null=True)),
                ('person_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Models.person')),
            ],
            options={
                'db_table': 'qualification',
            },
        ),
        migrations.CreateModel(
            name='Result',
            fields=[
                ('result_id', models.AutoField(primary_key=True, serialize=False)),
                ('course_gpa', models.DecimalField(decimal_places=2, max_digits=4)),
                ('obtained_marks', models.DecimalField(decimal_places=2, max_digits=6)),
                ('enrollment_id', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='Models.enrollment')),
            ],
            options={
                'db_table': 'result',
            },
        ),
        migrations.CreateModel(
            name='AssessmentChecked',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('obtained', models.DecimalField(decimal_places=2, max_digits=10)),
                ('assessment_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Models.assessment')),
                ('enrollment_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Models.enrollment')),
                ('result_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Models.result')),
            ],
            options={
                'db_table': 'assessmentChecked',
            },
        ),
        migrations.CreateModel(
            name='Reviews',
            fields=[
                ('review_id', models.AutoField(primary_key=True, serialize=False)),
                ('review_text', models.TextField(blank=True, null=True)),
                ('rating', models.DecimalField(decimal_places=2, max_digits=4)),
                ('create_date', models.DateTimeField(db_column='createdAt', default=datetime.datetime.now)),
                ('enrollment_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Models.enrollment')),
            ],
            options={
                'db_table': 'reviews',
            },
        ),
        migrations.CreateModel(
            name='SemesterDetails',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('class_id', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='Models.class')),
                ('course_code', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Models.course')),
                ('semester_id', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='Models.semester')),
            ],
            options={
                'db_table': 'semesterDetails',
            },
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('admission_date', models.DateField(blank=True, default=datetime.datetime(2025, 8, 7, 14, 30, 39, 284091, tzinfo=datetime.timezone.utc))),
                ('status', models.CharField(choices=[('Active', 'Active'), ('Dropped', 'Dropped'), ('Frozen', 'Frozen'), ('Graduated', 'Graduated'), ('On Probation', 'On Probation')], db_column='status', default='Active', max_length=12)),
                ('class_id', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='Models.class')),
                ('program_id', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='Models.program')),
                ('student_id', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='Models.person')),
            ],
            options={
                'db_table': 'Student',
            },
        ),
        migrations.AddField(
            model_name='enrollment',
            name='student_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Models.student'),
        ),
        migrations.CreateModel(
            name='ChangeRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('change_type', models.CharField(choices=[('hod_change', 'HOD Change'), ('faculty_delete', 'Faculty Delete'), ('student_delete', 'Student Delete')], max_length=20)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('confirmed', 'Confirmed'), ('declined', 'Declined'), ('applied', 'Applied'), ('expired', 'Expired')], default='pending', max_length=20)),
                ('confirmation_token', models.UUIDField(default=uuid.uuid4, unique=True)),
                ('requested_at', models.DateTimeField(auto_now_add=True)),
                ('confirmed_at', models.DateTimeField(blank=True, null=True)),
                ('applied_at', models.DateTimeField(blank=True, null=True)),
                ('requested_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Models.department')),
                ('target_student', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='deletion_requests', to='Models.student')),
                ('new_hod', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Models.faculty')),
                ('target_faculty', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='deletion_requests', to='Models.faculty')),
            ],
            options={
                'db_table': 'change_request',
            },
        ),
        migrations.CreateModel(
            name='Attendance',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('attendance_date', models.DateTimeField()),
                ('lecture_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Models.lecture')),
                ('student_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Models.student')),
            ],
            options={
                'db_table': 'attendance',
            },
        ),
        migrations.CreateModel(
            name='Transcript',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('total_credits', models.IntegerField()),
                ('semester_gpa', models.DecimalField(decimal_places=2, max_digits=4)),
                ('semester_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Models.semester')),
                ('student_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Models.student')),
            ],
            options={
                'db_table': 'transcript',
            },
        ),
        migrations.DeleteModel(
            name='Product',
        ),
        migrations.AddField(
            model_name='department',
            name='HOD',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='Models.faculty'),
        ),
        migrations.AddConstraint(
            model_name='result',
            constraint=models.CheckConstraint(condition=models.Q(('obtained_marks__gte', 0), ('obtained_marks__lte', 100)), name='valid_obtained_marks_range'),
        ),
        migrations.AddConstraint(
            model_name='result',
            constraint=models.CheckConstraint(condition=models.Q(('course_gpa__gte', 0.0), ('course_gpa__lte', 4.0)), name='valid_course_gpa_range'),
        ),
        migrations.AlterUniqueTogether(
            name='result',
            unique_together={('enrollment_id', 'result_id')},
        ),
        migrations.AlterUniqueTogether(
            name='assessmentchecked',
            unique_together={('assessment_id', 'enrollment_id')},
        ),
        migrations.AddConstraint(
            model_name='reviews',
            constraint=models.CheckConstraint(condition=models.Q(('rating__gte', 0.0), ('rating__lte', 10.0)), name='rating_range'),
        ),
        migrations.AlterUniqueTogether(
            name='reviews',
            unique_together={('review_id', 'enrollment_id')},
        ),
        migrations.AlterUniqueTogether(
            name='semesterdetails',
            unique_together={('course_code', 'class_id', 'semester_id')},
        ),
        migrations.AlterUniqueTogether(
            name='enrollment',
            unique_together={('student_id', 'allocation_id')},
        ),
        migrations.AlterUniqueTogether(
            name='attendance',
            unique_together={('attendance_date', 'student_id', 'lecture_id')},
        ),
        migrations.AddConstraint(
            model_name='transcript',
            constraint=models.CheckConstraint(condition=models.Q(('semester_gpa__gte', 0.0), ('semester_gpa__lte', 4.0)), name='semester_gpa_range'),
        ),
        migrations.AlterUniqueTogether(
            name='transcript',
            unique_together={('student_id', 'semester_id')},
        ),
    ]
